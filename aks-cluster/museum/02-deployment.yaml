apiVersion: v1
kind: Service
metadata:
  name: chartmuseum
  namespace: chartmuseum
  labels:
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: chartmuseum
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: http
    name: http
    protocol: TCP
  selector:
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: chartmuseum
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chartmuseum
  namespace: chartmuseum
  labels:
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: chartmuseum
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: chartmuseum
      app.kubernetes.io/instance: chartmuseum
  replicas: 1
  strategy:
    type: RollingUpdate
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        app.kubernetes.io/name: chartmuseum
        app.kubernetes.io/instance: chartmuseum
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: '8080'
    spec:
      securityContext:
        fsGroup: 1000      
      containers:
      - name: chartmuseum
        image: ghcr.io/helm/chartmuseum:v0.16.0
        imagePullPolicy: IfNotPresent
        securityContext:
          {}
        env:
        - name: "ALLOW_OVERWRITE"
          value: "true"
        - name: "AUTH_ANONYMOUS_GET"
          value: "true"
        - name: "CHART_POST_FORM_FIELD_NAME"
          value: "chart"
        - name: "ENABLE_METRICS"
          value: "true"
        - name: "LOG_JSON"
          value: "true"
        - name: "PROV_POST_FORM_FIELD_NAME"
          value: "prov"
        - name: "STORAGE"
          value: "local"
        - name: "BASIC_AUTH_PASS"
          valueFrom:
            secretKeyRef:
              name: chartmuseum
              key: "BASIC_AUTH_PASS"
        - name: "BASIC_AUTH_USER"
          valueFrom:
            secretKeyRef:
              name: chartmuseum
              key: "BASIC_AUTH_USER"
        args:
        - --port=8080
        - --storage-local-rootdir=/storage
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /storage
          name: storage-volume
      serviceAccountName: default
      automountServiceAccountToken: false
      volumes:
      - name: storage-volume
        emptyDir:
          medium: Memory
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: chartmuseum
  namespace: chartmuseum
  labels:
    app.kubernetes.io/name: chartmuseum
    app.kubernetes.io/instance: chartmuseum
spec:
  ingressClassName: webapprouting.kubernetes.azure.com
  rules:
  - host: chartmuseum.ingress.host
    http:
      paths:
      - path: "/"
        pathType: Prefix
        backend:
          service:
            name: chartmuseum
            port:
              number: 8080

