apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: retina-agent
  namespace: monitoring
  labels:
    k8s-app: retina
spec:
  selector:
    matchLabels:
      app: retina
  template:
    metadata:
      labels:
        app: retina
        k8s-app: retina
      annotations:
        prometheus.io/port: "10093"
        prometheus.io/path: "/metrics"
        prometheus.io/scrape: "true"
    spec:
      hostNetwork: true
      serviceAccountName: retina-agent
      initContainers:
        - name: init-retina
          image: ghcr.io/microsoft/retina/retina-init:v0.0.10
          imagePullPolicy: Always
          terminationMessagePolicy: FallbackToLogsOnError
          securityContext:
            privileged: true
          volumeMounts:
          - name: bpf
            mountPath: /sys/fs/bpf
            mountPropagation: Bidirectional
      containers:
        - name: retina 
          livenessProbe:
            httpGet:
              path: /metrics
              port: 10093
            initialDelaySeconds: 30
            periodSeconds: 30
          image: ghcr.io/microsoft/retina/retina-agent:v0.0.10
          imagePullPolicy: Always
          command:
          - /retina/controller
          args:
          - --health-probe-bind-address=:18081
          - --metrics-bind-address=:18080
          - "--config"
          - "/retina/config/config.yaml"
          ports:
          - name: retina
            containerPort: 10093
          resources:
            limits:
              memory: "300Mi"
              cpu: "100m"
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          - name: NODE_IP
            valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
          securityContext:
            capabilities:
              add:
              - SYS_ADMIN
              - SYS_RESOURCE
              - NET_ADMIN
              - IPC_LOCK
            privileged: false
          volumeMounts:
            - name: bpf
              mountPath: /sys/fs/bpf
            - name: cgroup
              mountPath: /sys/fs/cgroup
            - name: config
              mountPath: /retina/config
            - name: debug
              mountPath: /sys/kernel/debug
            - name: tmp
              mountPath: /tmp
            - name: trace
              mountPath: /sys/kernel/tracing
      terminationGracePeriodSeconds: 90 # Allow for retina to cleanup plugin resources.
      volumes:
      - name: bpf
        hostPath:
          path: /sys/fs/bpf
      - name: cgroup
        hostPath:
          path: /sys/fs/cgroup
      - name: config
        configMap:
          name: retina-config
      - name: debug
        hostPath:
          path: /sys/kernel/debug
      - name: tmp
        emptyDir:
          medium: Memory
      - name: trace
        hostPath:
          path: /sys/kernel/tracing
---
apiVersion: v1
kind: Service
metadata:
  name: retina-svc
  namespace: monitoring
  labels:
    app: retina
spec:
  ports:
    - port: 10093
      targetPort: 10093
  selector:
    app: retina
  type: ClusterIP

